{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","services/imagesApi.js","components/Modal/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["Searchbar","state","query","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","id","webformatURL","largeImageURL","tags","src","alt","data-url","ImageGallery","images","onClick","map","Button","axios","defaults","baseURL","searchQuery","currentPage","get","then","response","data","hits","modalRoot","document","querySelector","Modal","handleKeydown","code","onClose","handleBackdropClick","currentTarget","window","addEventListener","removeEventListener","createPortal","children","App","isLoaded","error","showModal","LargeUrl","tag","onChangeQuery","fetchImages","options","imagesApi","prevState","catch","finally","toggleModal","onImageClick","console","log","nodeName","largeUrl","dataset","url","prevProps","length","scrollTo","top","documentElement","scrollHeight","behavior","shouldRenderMoreButton","message","color","height","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2e1127ca.chunk.js","sourcesContent":["import React, { Component } from \"react\"\r\nimport \"./Searchbar.css\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nexport default class Searchbar extends Component {\r\n  state = {\r\n    query: \"\",\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ query: e.target.value })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    this.props.onSubmit(this.state.query)\r\n    this.setState({ query: \"\" })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form\r\n          className=\"SearchForm\"\r\n          onSubmit={this.handleSubmit}\r\n        >\r\n          <button\r\n            type=\"submit\"\r\n            className=\"SearchForm-button\"\r\n          >\r\n            <span className=\"SearchForm-button-label\">\r\n              Search\r\n            </span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={this.state.query}\r\n            onChange={this.handleChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n}\r\n","import \"./ImageGalleryItem.css\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst ImageGalleryItem = ({\r\n  id,\r\n  webformatURL,\r\n  largeImageURL,\r\n  tags,\r\n}) => (\r\n  <li key={id} className=\"ImageGalleryItem\">\r\n    <img\r\n      src={webformatURL}\r\n      alt={tags}\r\n      data-url={largeImageURL}\r\n      className=\"ImageGalleryItem-image\"\r\n    />\r\n  </li>\r\n)\r\n\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n  tags: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default ImageGalleryItem\r\n","import \"./ImageGallery.css\"\r\nimport ImageGalleryItem from \"../ImageGalleryItem\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst ImageGallery = ({ images, onClick }) => (\r\n  <ul className=\"ImageGallery\" onClick={onClick}>\r\n    {images.map(\r\n      ({ id, webformatURL, largeImageURL, tags }) => (\r\n        <ImageGalleryItem\r\n          key={id}\r\n          webformatURL={webformatURL}\r\n          largeImageURL={largeImageURL}\r\n          tags={tags}\r\n        />\r\n      )\r\n    )}\r\n  </ul>\r\n)\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(PropTypes.shape).isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ImageGallery\r\n","import \"./Button.css\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst Button = ({ onClick }) => (\r\n  <button className=\"Button\" onClick={onClick}>\r\n    Load more\r\n  </button>\r\n)\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Button\r\n","import axios from \"axios\"\r\n\r\nconst apiKey = \"21359619-d33abf781fc12db63121b07d3\"\r\n\r\naxios.defaults.baseURL = \"https://pixabay.com/api/\"\r\n\r\nconst fetchData = ({\r\n  searchQuery = \"\",\r\n  currentPage = 1,\r\n}) => {\r\n  return axios\r\n    .get(\r\n      `/?q=${searchQuery}&page=${currentPage}&key=${apiKey}&image_type=photo&orientation=horizontal&per_page=12`\r\n    )\r\n    .then((response) => response.data.hits)\r\n}\r\n\r\nexport default { fetchData }\r\n","import { Component } from \"react\"\r\nimport { createPortal } from \"react-dom\"\r\nimport PropTypes from \"prop-types\"\r\nimport \"./Modal.css\"\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\")\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeydown)\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\r\n      \"keydown\",\r\n      this.handleKeydown\r\n    )\r\n  }\r\n\r\n  handleKeydown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      this.props.onClose()\r\n    }\r\n  }\r\n\r\n  handleBackdropClick = (e) => {\r\n    if (e.target === e.currentTarget) {\r\n      this.props.onClose()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div\r\n        className=\"Overlay\"\r\n        onClick={this.handleBackdropClick}\r\n      >\r\n        <div className=\"Modal\">{this.props.children}</div>\r\n      </div>,\r\n      modalRoot\r\n    )\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n}\r\n","import { Component } from \"react\"\nimport \"./App.css\"\nimport Searchbar from \"./components/Searchbar\"\nimport ImageGallery from \"./components/ImageGallery\"\nimport Button from \"./components/Button\"\nimport imagesApi from \"./services/imagesApi\"\nimport Loader from \"react-loader-spinner\"\nimport Modal from \"./components/Modal\"\n\nclass App extends Component {\n  state = {\n    images: [],\n    currentPage: 1,\n    searchQuery: \"\",\n    isLoaded: false,\n    error: null,\n    showModal: false,\n    LargeUrl: \"\",\n    tag: \"\",\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { searchQuery, images } = this.state\n\n    if (prevState.searchQuery !== searchQuery) {\n      this.fetchImages()\n    }\n\n    if (images.length > 12) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: \"smooth\",\n      })\n    }\n  }\n\n  onChangeQuery = (query) => {\n    this.setState({\n      searchQuery: query,\n      images: [],\n      currentPage: 1,\n      error: null,\n    })\n  }\n\n  fetchImages = () => {\n    const { currentPage, searchQuery } = this.state\n    const options = {\n      searchQuery,\n      currentPage,\n    }\n\n    this.setState({\n      isLoaded: true,\n    })\n\n    imagesApi\n      .fetchData(options)\n      .then((hits) =>\n        this.setState((prevState) => ({\n          images: [...prevState.images, ...hits],\n          currentPage: prevState.currentPage + 1,\n        }))\n      )\n      .catch((error) => this.setState({ error }))\n      .finally(() => this.setState({ isLoaded: false }))\n  }\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }))\n  }\n\n  onImageClick = (e) => {\n    console.log(\"Кликнули по картинке\")\n    if (e.target.nodeName !== \"IMG\") {\n      return\n    }\n\n    this.setState(\n      {\n        largeUrl: e.target.dataset.url,\n        tags: e.target.alt,\n      },\n      () => console.log(this.state.tags)\n    )\n\n    this.toggleModal()\n  }\n\n  render() {\n    const {\n      isLoaded,\n      images,\n      error,\n      showModal,\n      largeUrl,\n      tag,\n    } = this.state\n\n    const shouldRenderMoreButton =\n      images.length > 0 && !isLoaded\n\n    return (\n      <div className=\"container\">\n        <Searchbar onSubmit={this.onChangeQuery} />\n\n        {error && (\n          <h2>\n            Sorry something went wrong, try again later!(\n            {error.message})\n          </h2>\n        )}\n\n        <ImageGallery\n          images={images}\n          onClick={this.onImageClick}\n        />\n\n        {isLoaded && (\n          <Loader\n            type=\"Audio\"\n            color=\"#00BFFF\"\n            height={80}\n            width={80}\n          />\n        )}\n\n        {shouldRenderMoreButton && (\n          <Button onClick={this.fetchImages} />\n        )}\n\n        {showModal && (\n          <Modal onClose={this.toggleModal}>\n            <img src={largeUrl} alt={tag} />\n          </Modal>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}